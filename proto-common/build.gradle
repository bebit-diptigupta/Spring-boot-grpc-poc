plugins {
    id 'java'
    id 'maven-publish'
    id "com.google.protobuf" version "0.9.3"

    id "org.jetbrains.kotlin.jvm" version "1.8.21"
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    // adding for protoc as mentioned in https://github.com/grpc/grpc-java/blob/master/README.md#download
    //runtimeOnly 'io.grpc:grpc-netty-shaded:1.54.1' // maybe, it's not needed.
    implementation 'io.grpc:grpc-protobuf:1.54.1'
    implementation 'io.grpc:grpc-stub:1.54.1'
    compileOnly 'org.apache.tomcat:annotations-api:6.0.53' // necessary for Java 9+

    // Needed for Kotlin to avoid build error
    implementation 'io.grpc:grpc-kotlin-stub:1.3.0'
    implementation("com.google.protobuf:protobuf-kotlin:3.22.2")
}

test {
    useJUnitPlatform()
}

protobuf {
    // Configure the protoc executable.
    protoc {
        // Download from the repository.
        artifact = 'com.google.protobuf:protoc:3.22.2'
    }

    // Locate the codegen plugins.
    plugins {
        // Locate a plugin with name 'grpc'.
        grpc {
            // Download from the repository.
            artifact = 'io.grpc:protoc-gen-grpc-java:1.54.1'
        }

        // Needed for Kotlin grpc service generation
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:1.3.0:jdk8@jar"
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            grpc {}
            grpckt {}
        }

        // By Default, generate code for Java; need to define Kotlin as well for request/response
        ofSourceSet('main')*.builtins{
            kotlin{}

            // If we want to generate only Kotlin then need to uncomment below line
            // remove java
        }
    }
}

publishing {
    publications {
        mavenPlugin(MavenPublication) {
            from components.java
        }
    }
}